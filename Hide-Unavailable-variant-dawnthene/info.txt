old theme code https://github.com/sherinhashtag/shopifyvariant/blob/master/available.liquid

I done this type of work in artofpunjab store

1. First add available.liquid snippt and call it on theme.liqiud bottm side.

{% if template contains 'product' %}
      {% render 'available-only' %}
   {% endif %} 

2. here is the code of available.liquid

<script>

 // Required functionality from depricated options_selection.js
  Shopify.arrayIncludes = function(e, t) {
    for (var n = 0; n < e.length; n++)
        if (e[n] == t) return !0;
    return !1
  }, Shopify.uniq = function(e) {
      for (var t = [], n = 0; n < e.length; n++) Shopify.arrayIncludes(t, e[n]) || t.push(e[n]);
      return t
  }

  Shopify.optionsMap = {};

  // Code for getting product data and mapping object
     var productsData = jQuery('.product_data').text();
     var product = jQuery.parseJSON(productsData);
  alert('ggg');
  // Building our mapping object.
    for (var i=0; i<product.variants.length; i++) {
      var variant = product.variants[i];
      if (variant.available) {
        // Gathering values for the 1st drop-down.
        Shopify.optionsMap['root'] = Shopify.optionsMap['root'] || [];
        Shopify.optionsMap['root'].push(variant.option1);
        Shopify.optionsMap['root'] = Shopify.uniq(Shopify.optionsMap['root']);
        // Gathering values for the 2nd drop-down.
        if (product.options.length > 1) {
          var key = variant.option1;
          Shopify.optionsMap[key] = Shopify.optionsMap[key] || [];
          Shopify.optionsMap[key].push(variant.option2);
          Shopify.optionsMap[key] = Shopify.uniq(Shopify.optionsMap[key]);
          //console.log(Shopify.optionsMap[key]);
         }
        // Gathering values for the 3rd drop-down.
        if (product.options.length === 3) {
        var key = variant.option1 + ' / ' + variant.option2;
          Shopify.optionsMap[key] = Shopify.optionsMap[key] || [];
          Shopify.optionsMap[key].push(variant.option3);
          Shopify.optionsMap[key] = Shopify.uniq(Shopify.optionsMap[key]);
        }
      }
    }

// Update options right away.
   updateOptionsInSelector(0);
  if (product.options.length > 1) { updateOptionsInSelector(1); }
  if (product.options.length === 3) { updateOptionsInSelector(2); }
  // When there is an update in the first dropdown.
  jQuery(".single-option-selector:eq(0)").change(function() {
    updateOptionsInSelector(1);
    if (product.options.length === 3) { updateOptionsInSelector(2); }
    return true;
  });
  // When there is an update in the second dropdown.
  jQuery(".single-option-selector:eq(1)").change(function() {
    if (product.options.length === 3) { updateOptionsInSelector(2); }
    return true;
  });  

  function updateOptionsInSelector(selectorIndex) {
    switch (selectorIndex) {
    case 0:
      var key = 'root';
      var selector = jQuery('.single-option-selector:eq(0)');
      break;
    case 1:
      var key = jQuery('.single-option-selector:eq(0)').val();
      var selector = jQuery('.single-option-selector:eq(1)');
      break;
    case 2:
      var key = jQuery('.single-option-selector:eq(0)').val();  
      key += ' / ' + jQuery('.single-option-selector:eq(1)').val();
      var selector = jQuery('.single-option-selector:eq(2)');
  }
  
  var initialValue = selector.val();
  selector.empty();    
  var availableOptions = Shopify.optionsMap[key];
     //alert(availableOptions);
  for (var i=0; i<availableOptions.length; i++) {
    var option = availableOptions[i];
    var newOption = jQuery('<option></option>').val(option).html(option);
    selector.append(newOption);
  }

  if (jQuery.inArray(initialValue, availableOptions) !== -1) {
    selector.val(initialValue);
  }
  selector.trigger('change');  
  
};

</script>

3. add hidden div for getting a product data in main-product.liqiud file for getting prouct data in global.js file

 <div hidden class="product_data">
                {{ product | json }} 
                </div>
